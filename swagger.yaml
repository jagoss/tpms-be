definitions:
    Age:
        format: int64
        type: integer
        x-go-package: be-tpms/src/api/domain/model
    Breed:
        format: int16
        type: integer
        x-go-package: be-tpms/src/api/domain/model
    DeletedAt:
        $ref: '#/definitions/NullTime'
    Dog:
        properties:
            Age:
                $ref: '#/definitions/Age'
            Breed:
                $ref: '#/definitions/Breed'
            CreatedAt:
                format: date-time
                type: string
            DeletedAt:
                $ref: '#/definitions/DeletedAt'
            Host:
                $ref: '#/definitions/User'
            ID:
                format: uint64
                type: integer
            ImgUrl:
                type: string
            IsLost:
                type: boolean
            Latitude:
                format: float
                type: number
            Longitude:
                format: float
                type: number
            Name:
                type: string
            Owner:
                $ref: '#/definitions/User'
            Size:
                $ref: '#/definitions/Size'
            UpdatedAt:
                format: date-time
                type: string
        type: object
        x-go-package: be-tpms/src/api/domain/model
    DogRequest:
        properties:
            Dog:
                $ref: '#/definitions/Dog'
            Imgs:
                description: |-
                    Dog images array
                    name: Imgs
                    in: [][]byte
                items:
                    items:
                        format: uint8
                        type: integer
                    type: array
                type: array
        required:
            - Dog
        type: object
        x-go-package: be-tpms/src/api/domain/model
    Model:
        description: |-
            Model a basic GoLang struct which includes the following fields: ID, CreatedAt, UpdatedAt, DeletedAt
            It may be embedded into your model or you may build your own model without it
            type User struct {
            gorm.Model
            }
        properties:
            CreatedAt:
                format: date-time
                type: string
            DeletedAt:
                $ref: '#/definitions/DeletedAt'
            ID:
                format: uint64
                type: integer
            UpdatedAt:
                format: date-time
                type: string
        type: object
        x-go-package: gorm.io/gorm
    NullTime:
        description: |-
            NullTime implements the Scanner interface so
            it can be used as a scan destination, similar to NullString.
        properties:
            Time:
                format: date-time
                type: string
            Valid:
                type: boolean
        title: NullTime represents a time.Time that may be null.
        type: object
        x-go-package: database/sql
    Size:
        format: int64
        type: integer
        x-go-package: be-tpms/src/api/domain/model
    User:
        properties:
            City:
                description: |-
                    City
                    in: string
                type: string
            Email:
                description: |-
                    Email
                    in: string
                type: string
            FirstName:
                description: |-
                    First name
                    in: string
                type: string
            ID:
                description: |-
                    User ID
                    in: string
                type: string
            LastName:
                description: |-
                    Last name
                    in: string
                type: string
            Phone:
                description: |-
                    Phone number
                    in: string
                type: string
        type: object
        x-go-package: be-tpms/src/api/domain/model
info: {}
paths:
    /ping:
        get:
            description: Ping server to check if it's up and running
            operationId: ping
            responses:
                "200":
                    $ref: '#/responses/pong'
            security:
                - apiKey:
                    - '[]'
swagger: "2.0"
