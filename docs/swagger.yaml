basePath: /api/v1
definitions:
  model.DogRequest:
    properties:
      age:
        type: string
      breed:
        type: string
      coatColor:
        type: string
      coatLength:
        type: string
      host:
        type: string
      id:
        type: string
      imgUrl:
        type: string
      imgs:
        items:
          items:
            type: integer
          type: array
        type: array
      isLost:
        type: boolean
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      owner:
        type: string
      size:
        type: string
    type: object
  model.DogResponse:
    properties:
      age:
        type: string
      breed:
        type: string
      coatColor:
        type: string
      coatLength:
        type: string
      host:
        type: string
      id:
        type: string
      img:
        items:
          type: integer
        type: array
      imgsUrl:
        type: string
      isLost:
        type: boolean
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      owner:
        type: string
      size:
        type: string
    type: object
  model.User:
    properties:
      city:
        description: |-
          City
          in: string
        type: string
      email:
        description: |-
          Email
          in: string
        type: string
      fcmtoken:
        description: |-
          FCMToken
          in: string
        type: string
      firstName:
        description: |-
          First name
          in: string
        type: string
      id:
        description: |-
          User ID
          in: string
        type: string
      lastName:
        description: |-
          Last name
          in: string
        type: string
      phone:
        description: |-
          Phone number
          in: string
        type: string
    type: object
  model.UserContactInfo:
    properties:
      email:
        description: |-
          Email
          in: string
        type: string
      firstName:
        type: string
      lastName:
        description: |-
          Last name
          in: string
        type: string
      phone:
        description: |-
          Phone number
          in: string
        type: string
    type: object
host: https://tpms-fdwva.ondigitalocean.app/tpms-be2
info:
  contact: {}
  description: tpms back-end Api docs
  license:
    name: TMPS
  title: TPMS-BE Api
  version: 1.0.1
paths:
  /dog:
    patch:
      consumes:
      - application/json
      description: Updates existing dog
      parameters:
      - description: dog
        in: body
        name: dog
        schema:
          $ref: '#/definitions/model.DogRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DogResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      summary: Updates dog
      tags:
      - dog
    post:
      consumes:
      - application/json
      description: Register new dog
      parameters:
      - description: dog
        in: body
        name: dog
        schema:
          $ref: '#/definitions/model.DogRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DogResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      summary: Register new dog
      tags:
      - dog
  /dog/:id:
    get:
      consumes:
      - application/json
      description: Get dog given its ID
      parameters:
      - description: dog ID
        in: path
        name: dog
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DogResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      summary: Get dog given its ID
      tags:
      - dog
  /dog/claim_found:
    patch:
      consumes:
      - application/json
      description: Claim that missing dog is found
      parameters:
      - description: dog ID
        in: query
        name: dogID
        type: string
      - description: possible matching dogs
        in: query
        items:
          type: string
        name: matchingDogs
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      summary: Claim that missing dog was found
      tags:
      - dog
  /dog/found:
    patch:
      consumes:
      - application/json
      description: Reunite dog with owner. Making him its only host and removing other
        hosts
      parameters:
      - description: dog ID
        in: query
        name: dogID
        type: string
      - description: dog owner ID
        in: query
        name: ownerID
        type: string
      - description: dog host ID
        in: query
        name: hostID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DogResponse'
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      summary: Reunite dog with owner
      tags:
      - dog
  /dog/missing:
    get:
      consumes:
      - application/json
      description: If no argument is given it returns all missing dogs. If user location
        and a search radius is sent, then it returns all missing dogs within that
        radius.
      parameters:
      - description: user latitude
        in: query
        name: userLatitude
        type: number
      - description: user longitude
        in: query
        name: userLongitude
        type: number
      - description: radio to look for dogs
        in: query
        name: radius
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.DogResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      summary: Brings list of missing dogs
      tags:
      - dog
  /img:
    post:
      consumes:
      - application/json
      description: Add image to storage
      parameters:
      - description: dog img to save
        in: formData
        items:
          type: integer
        name: img
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: name" saved correctly!
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      summary: Add Image
      tags:
      - imgs
  /ping:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Ping
      tags:
      - ping
  /user:
    get:
      consumes:
      - application/json
      description: Get user from given ID
      parameters:
      - description: user id
        in: header
        name: x-user-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      summary: Get user
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Updates existing user
      parameters:
      - description: user to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      summary: Updates user
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Register new user
      parameters:
      - description: new user
        in: body
        name: user
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      summary: Register new user
      tags:
      - user
  /user/:id:
    get:
      consumes:
      - application/json
      description: Get user from given ID
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserContactInfo'
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      summary: Get user contact info
      tags:
      - user
  /user/dog:
    get:
      consumes:
      - application/json
      description: Gets 2 lists of dogs, one with dogs owned by de user and another
        with dogs found by the user
      parameters:
      - description: user to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                ' foundDogs':
                  items:
                    $ref: '#/definitions/model.DogResponse'
                  type: array
                ownedDogs:
                  items:
                    $ref: '#/definitions/model.DogResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      summary: Get all user dogs
      tags:
      - user
  /user/fcmtoken:
    put:
      consumes:
      - application/json
      description: Updates FCM token to allow server to send direct notifications
        to users at any time
      parameters:
      - description: FCM token
        in: body
        name: token
        required: true
        schema:
          allOf:
          - type: object
          - properties:
              token:
                type: string
            type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - type: object
            - properties:
                result:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      summary: Updates FCM token for given user
      tags:
      - user
  /user/notif:
    post:
      consumes:
      - application/json
      description: Register new user
      parameters:
      - description: message
        in: body
        name: user
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "401":
          description: Unauthorized
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - type: object
            - properties:
                error:
                  type: string
                message:
                  type: string
              type: object
      summary: Register new user
      tags:
      - user
swagger: "2.0"
